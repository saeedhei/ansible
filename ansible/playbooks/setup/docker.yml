---
- name: Install Docker
  hosts: db_servers
  become: yes
  tasks:
    - name: Install required packages for Debian/Ubuntu
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Download Docker's official GPG key (Debian/Ubuntu)
      ansible.builtin.shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      when: ansible_os_family == "Debian"
      register: gpg_key
      ignore_errors: yes

    - name: Check if the GPG key was added successfully
      ansible.builtin.debug:
        msg: "GPG key was added successfully."
      when: gpg_key is success

    - name: Add Docker repository 
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present

    - name: Install Docker
      ansible.builtin.package:
        name: docker-ce
        state: present

    - name: Start and enable Docker
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Add user to the Docker group
      ansible.builtin.user:
        name: "{{ ansible_env.USER }}"
        groups: docker
        append: yes

    - name: Verify Docker installation
      command: docker --version
      register: docker_version

    - debug:
        var: docker_version.stdout

      # Install Docker Compose
    - name: Install Docker Compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
        force: yes

    - name: Verify Docker Compose installation
      command: docker-compose --version
      register: compose_version

    - debug:
        var: compose_version.stdout    

    # - name: Install required packages for RHEL/CentOS
    #   ansible.builtin.yum:
    #     name:
    #       - yum-utils
    #       - device-mapper-persistent-data
    #       - lvm2
    #     state: present
    #   when: ansible_os_family == "RedHat"

    # - name: Add Docker repository (RHEL/CentOS)
    #   ansible.builtin.yum_repository:
    #     name: docker
    #     description: Docker Repository
    #     baseurl: https://download.docker.com/linux/centos/7/x86_64/stable
    #     gpgcheck: yes
    #     gpgkey: https://download.docker.com/linux/centos/gpg
    #     enabled: yes
    #   when: ansible_os_family == "RedHat"


