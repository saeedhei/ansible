---
- name: Deploy CouchDB on db servers
  hosts: db_servers
  become: true
  tasks:
    - name: Stop and remove the CouchDB container
      shell: |
        docker-compose -f /docker-projects/docker-couchdb/docker-compose.yml down
      args:
        executable: /bin/bash

    - name: Remove CouchDB data directory
      file:
        path: "/docker-projects/docker-couchdb"
        state: absent

- name: Deploy CouchDB on db servers
  hosts: managers
  become: true
  tasks:    
    - name: Create CouchDB data directories
      file:
        path: "/docker-projects/docker-couchdb/data"
        state: directory
        mode: '0755'

    - name: Create CouchDB Docker Compose file
      copy:
        dest: "/docker-projects/docker-couchdb/docker-compose.yml"
        content: |
          services:
            couchdb-node0:
              image: couchdb:3.4.2
              container_name: couchdb0
              ports:
                - "5984:5984"
                - "5986:5986"
                - "4369:4369"
                - "9100-9200:9100-9200"
              volumes:
                - /docker-projects/docker-couchdb/data:/opt/couchdb/data
                - /docker-projects/docker-couchdb/config:/opt/couchdb/etc/local.d
              environment:
                - COUCHDB_USER={{ couchdb_admin_user }}
                - COUCHDB_PASSWORD={{ couchdb_admin_password }}
                - COUCHDB_SECRET=mysecret
                - NODENAME={{ ansible_host }}
                - ERL_FLAGS=-setcookie mycookie
              networks:
                couchdb_isolated_nw:
                  aliases:
                    - couchdb-0
          networks:
            couchdb_isolated_nw:
              driver: bridge

    - name: Start CouchDB container
      shell: |
        docker-compose -f /docker-projects/docker-couchdb/docker-compose.yml up -d

    - name: Wait for CouchDB to be ready
      uri:
        url: "http://{{ ansible_host }}:5984/"
        status_code: 200
        timeout: 30
      register: couchdb_check
      retries: 5
      delay: 5
      until: couchdb_check is succeeded

# workers

- name: Deploy CouchDB on db servers
  hosts: workers
  become: true
  tasks:        
    - name: Create CouchDB data directories
      file:
        path: "/docker-projects/docker-couchdb/data"
        state: directory
        mode: '0755'

    - name: Create CouchDB Docker Compose file
      copy:
        dest: "/docker-projects/docker-couchdb/docker-compose.yml"
        content: |
          services:
            couchdb-node1:
              image: couchdb:3.4.2
              container_name: couchdb1
              ports:
                - "5984:5984"
                - "5986:5986"
                - "4369:4369"
                - "9100-9200:9100-9200"
              volumes:
                - /docker-projects/docker-couchdb/data:/opt/couchdb/data
                - /docker-projects/docker-couchdb/config:/opt/couchdb/etc/local.d
              environment:
                - COUCHDB_USER={{ couchdb_admin_user }}
                - COUCHDB_PASSWORD={{ couchdb_admin_password }}
                - COUCHDB_SECRET=mysecret
                - NODENAME={{ ansible_host }}
                - ERL_FLAGS=-setcookie mycookie
              networks:
                couchdb_isolated_nw:
                  aliases:
                    - couchdb-1
          networks:
            couchdb_isolated_nw:
              driver: bridge

    - name: Start CouchDB container
      shell: |
        docker-compose -f /docker-projects/docker-couchdb/docker-compose.yml up -d

    - name: Wait for CouchDB to be ready
      uri:
        url: "http://{{ ansible_host }}:5984/"
        status_code: 200
        timeout: 30
      register: couchdb_check
      retries: 5
      delay: 5
      until: couchdb_check is succeeded


- name: Deploy CouchDB Configuration
  hosts: managers
  become: true
  tasks:
    - name: Ensure CouchDB configuration directory exists
      file:
        path: "/docker-projects/docker-couchdb/config"
        state: directory
        mode: '0755'

    - name: Deploy local.ini configuration
      copy:
        dest: "/docker-projects/docker-couchdb/config/local.ini"
        content: |
          [chttpd]
          bind_address = 0.0.0.0 
          require_valid_user = true # secure main url         

          [couchdb]
          hostname = {{ ansible_host }}  # Using inventory hostname as couchdb-0 or couchdb-1

          [httpd]
          bind_address = 0.0.0.0  # Listen on all interfaces

          [cors]
          enable = true
          credentials = true
          methods = GET, PUT, POST, HEAD, DELETE
          origins = *
          [cluster]
          q = 2
          n = 2 

    - name: Restart CouchDB container using docker-compose
      shell: |
        docker-compose -f /docker-projects/docker-couchdb/docker-compose.yml restart couchdb-node0

- name: Deploy CouchDB Configuration
  hosts: workers
  become: true
  tasks:
    - name: Ensure CouchDB configuration directory exists
      file:
        path: "/docker-projects/docker-couchdb/config"
        state: directory
        mode: '0755'

    - name: Deploy local.ini configuration
      copy:
        dest: "/docker-projects/docker-couchdb/config/local.ini"
        content: |
          [chttpd]
          bind_address = 0.0.0.0 

          [couchdb]
          hostname = {{ ansible_host }}  # Using inventory hostname as couchdb-0 or couchdb-1

          [httpd]
          bind_address = 0.0.0.0  # Listen on all interfaces

          [cors]
          enable = true
          credentials = true
          methods = GET, PUT, POST, HEAD, DELETE
          origins = *

    - name: Restart CouchDB container using docker-compose
      shell: |
        docker-compose -f /docker-projects/docker-couchdb/docker-compose.yml restart couchdb-node1

- name: Add CouchDB Nodes to Cluster
  hosts: manager
  become: yes
  tasks:
    - name: Add each worker node to CouchDB cluster
      uri:
        url: "http://{{ couchdb_admin_user }}:{{ couchdb_admin_password }}@127.0.0.1:5984/_cluster_setup"
        method: POST
        headers:
          Authorization: "Basic {{ (couchdb_admin_user + ':' + couchdb_admin_password) | b64encode }}"
          Content-Type: application/json
        body_format: json
        body: '{
          "action": "add_node",
          "host": "45.88.188.201",
          "username": "{{ couchdb_admin_user }}",
          "password": "{{ couchdb_admin_password }}"
        }'
        return_content: yes
        status_code: [200, 201]
      register: add_node_result

    - name: Debug add_node response
      debug:
        var: add_node_result.json

    - name: Finalize CouchDB cluster setup
      uri:
        url: "http://{{ couchdb_admin_user }}:{{ couchdb_admin_password }}@127.0.0.1:5984/_cluster_setup"
        method: POST
        headers:
          Authorization: "Basic {{ (couchdb_admin_user + ':' + couchdb_admin_password) | b64encode }}"
          Content-Type: application/json
        body_format: json
        body: '{
          "action": "finish_cluster"
        }'
        return_content: yes
        status_code: [200, 201]
      register: finish_cluster_result

    - name: Debug finish_cluster response
      debug:
        var: finish_cluster_result.json

    - name: Add a normal user
      uri:
        url: "http://{{ couchdb_admin_user }}:{{ couchdb_admin_password }}@127.0.0.1:5984/_users/org.couchdb.user:{{ couchdb_user }}"
        method: PUT
        headers:
          Authorization: "Basic {{ (couchdb_admin_user + ':' + couchdb_admin_password) | b64encode }}"
          Content-Type: application/json
        body_format: json
        body:
          name: "{{ couchdb_user }}"
          password: "{{ couchdb_user_password }}"
          roles: []
          type: "user"
        status_code: 201
      register: add_user_response

    - name: Debug response
      debug:
        var: add_user_response.json
